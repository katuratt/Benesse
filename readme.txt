pythonの仮想環境下で，katsuraの直下で（app.pyやpagesフォルダのある場所で）
$ streamlit run app.py
を実行することで，起動します．
起動しない場合は，__pycache__を消してください．__pycache__はkatsuraの中とappsの中にございます．

念の為，必要となるモジュールはrequirements.txtに示しましたが，漏れがある場合がございます．

こだわった点は以下の通りです．
1. 「本質的な評価軸」が最適化され，自分にあった企業の範囲が狭まっていくところをしっかりと実装した点です．
2. 「自己分析」のページでは，他のページに移動した後に戻っても，記入した情報は入ったままですが，「企業体験」のページでは，インターンシップに応募したり，ゲーム後のアンケートに答えた後は，初期ページに戻るようにした点です．
3. カテゴライズのページで，特定の産業のみをグラフ中に表示させたり，企業名検索ができるようにした点です．対象となる宮崎タクヤ君は現在は使わないと思いますが，就活が進むにつれ，検索機能は欲しいであろうと考え，実装しました．
4. 個人情報の収集許諾やインターンシップに応募する際の個人情報の記入等の，些細なところまで再現した点です．


各ファイルの役割は以下のようになっております
app.py : メインとなるファイル
/pages/01_🔍_自己分析.py : 自己分析を行うためのページの元となるファイル
/pages/02_📈_カテゴライズ : 自己分析の結果を表すページの元となるファイル
/pages/03_🏢_業界・企業体験.py : 業界や企業のゲーム・VRの体験，インターンシップの応募を行うためのページの元となるファイル
/apps/display.py : app.pyで呼び出され，画面の表示を行う
/apps/generate_question.py : 質問のリストなどを引数に持ち，ユーザに質問を投げ，その解答を返す関数を作成するファイル
/data/additional_questions.csv : 業界・企業体験後に，自己分析の精度を向上させるために行う質問を格納したcsvファイル
/data/company_data.csv : 企業の情報を格納したcsvファイル
/data/questions.csv : 自己分析を行うための質問を格納したcsvファイル
/data/その他のpngファイル : ゲームやVRの体験時に表示する写真
requirements.txt : このプログラムを実行するにあたり，必要となるモジュールを示したファイル
generate_data.ipynb : 企業データをランダムに作成するプログラムファイル